name: isolate-malware-host
version: 1.0.0
description: Isolate host with detected malware and collect forensics
author: security-team
tags: [malware, containment, automated, edr]

triggers:
  - event_type: malware_detected
    conditions:
      severity: [high, critical]

variables:
  host_id: ""
  host_ip: ""
  hostname: ""
  malware_hash: ""
  malware_name: ""
  incident_id: ""
  detection_time: ""

preconditions:
  - check: host_reachable
    params:
      host: ${host_ip}
      timeout: 5

steps:
  - name: Create incident ticket
    type: ticketing
    action: create_ticket
    params:
      provider: jira
      project: SEC
      issue_type: Security_Incident
      priority: high
      summary: "Malware detected: ${malware_name} on ${hostname}"
      description: |
        Malware Detection Alert
        
        Host: ${hostname} (${host_ip})
        Malware: ${malware_name}
        Hash: ${malware_hash}
        Detected: ${detection_time}
        
        Automated response initiated.
      labels: [malware, automated, ${severity}]
    on_failure: continue

  - name: Collect pre-isolation forensics
    type: edr
    action: collect_forensics
    target: ${host_id}
    params:
      artifacts:
        - memory_dump
        - process_list
        - network_connections
        - file_hashes
        - registry_snapshot
      priority: high
      timeout: 300
    timeout: 600
    on_failure: continue

  - name: Isolate host via EDR
    type: edr
    action: isolate_host
    target: ${host_id}
    params:
      provider: crowdstrike
      reason: "Malware detected: ${malware_name}"
      maintain_management: true
    approval_required: false
    timeout: 60

  - name: Quarantine at network level
    type: containment
    action: quarantine
    target: ${mac_address}
    params:
      provider: cisco_ise
      vlan_id: 999
      reason: "Malware containment - ${incident_id}"
    timeout: 60
    on_failure: continue

  - name: Kill malicious processes
    type: edr
    action: kill_process
    target: ${host_id}
    params:
      process_name: ${malware_process}
      force: true
      reason: "Malware remediation"
    timeout: 30
    on_failure: continue

  - name: Block malware hash globally
    type: edr
    action: block_hash
    params:
      hash: ${malware_hash}
      scope: global
      reason: "Malware IOC - ${incident_id}"
    on_failure: continue

  - name: Notify security team
    type: notification
    action: send_alert
    params:
      channels:
        - slack
        - email
        - pagerduty
      priority: high
      message: |
        ðŸš¨ Malware Isolation Complete
        
        Host: ${hostname} (${host_ip})
        Malware: ${malware_name}
        Hash: ${malware_hash}
        Status: ISOLATED
        
        Forensics collected, host quarantined.
        Incident: ${incident_id}
      metadata:
        incident_id: ${incident_id}
        host_id: ${host_id}

  - name: Wait for remediation
    type: delay
    params:
      duration: 300
      reason: "Allow time for manual investigation"

  - name: Re-scan after remediation
    type: verification
    action: rescan
    target: ${host_ip}
    params:
      scanner: aegis
      mode: comprehensive
      check_vulns: true
      timeout: 600
    timeout: 900

postconditions:
  - verify: host_isolated
    params:
      host_id: ${host_id}
      method: connectivity_test
      expected: no_external_connectivity

  - verify: malware_removed
    params:
      host_id: ${host_id}
      hash: ${malware_hash}
      expected: not_found

rollback:
  - name: Restore network access
    type: containment
    action: unquarantine
    target: ${mac_address}
    params:
      provider: cisco_ise

  - name: Un-isolate host
    type: edr
    action: unisolate_host
    target: ${host_id}

metadata:
  severity: high
  category: malware_response
  rbac_role: security_operator
  audit: true
  auto_approve: false
  retention_days: 365
  compliance: [sox, pci_dss, iso27001]
