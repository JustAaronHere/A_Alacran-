name: critical-vulnerability-patch
version: 1.0.0
description: Automated patching workflow for critical vulnerabilities
author: vulnerability-management-team
tags: [vulnerability, patching, remediation, automated]

triggers:
  - event_type: critical_vulnerability_detected
    conditions:
      cvss_score: ">= 9.0"
      exploitable: true

variables:
  host_id: ""
  host_ip: ""
  hostname: ""
  cve_id: ""
  cvss_score: ""
  vulnerability_name: ""
  patch_available: ""
  incident_id: ""

preconditions:
  - check: host_online
    params:
      host: ${host_ip}
      timeout: 10

  - check: patch_available
    params:
      cve: ${cve_id}
      host_os: ${host_os}

steps:
  - name: Create vulnerability ticket
    type: ticketing
    action: create_ticket
    params:
      provider: jira
      project: VULN
      issue_type: Vulnerability
      priority: critical
      summary: "Critical vuln ${cve_id} on ${hostname}"
      description: |
        Critical Vulnerability Detected
        
        CVE: ${cve_id}
        CVSS: ${cvss_score}
        Host: ${hostname} (${host_ip})
        
        Automated patching workflow initiated.
      labels: [critical, ${cve_id}, automated]

  - name: Assess system criticality
    type: analysis
    action: assess_criticality
    params:
      host_id: ${host_id}
      factors: [business_impact, data_sensitivity, uptime_requirements]
    timeout: 30

  - name: Snapshot system state
    type: backup
    action: create_snapshot
    target: ${host_id}
    params:
      type: full
      description: "Pre-patch snapshot for ${cve_id}"
      retention_days: 30
    timeout: 600
    on_failure: abort

  - name: Request patching approval
    type: approval
    action: request_approval
    params:
      approvers: [change_management, system_owners]
      timeout: 3600
      message: "Approve critical patch for ${cve_id} on ${hostname}?"
      emergency: true
    approval_required: true
    approval_timeout: 3600

  - name: Schedule maintenance window
    type: scheduling
    action: schedule_maintenance
    params:
      host_id: ${host_id}
      duration: 3600
      notify: [system_owners, operations]
      reason: "Critical vulnerability patching"

  - name: Apply security patch
    type: remediation
    action: apply_patch
    target: ${host_id}
    params:
      cve: ${cve_id}
      patch_id: ${patch_id}
      method: automated
      backup_before: true
      reboot_if_required: true
    timeout: 1800

  - name: Verify patch installation
    type: verification
    action: verify_patch
    target: ${host_id}
    params:
      cve: ${cve_id}
      expected_version: ${patched_version}
    timeout: 300

  - name: Re-scan for vulnerability
    type: verification
    action: vulnerability_scan
    target: ${host_ip}
    params:
      scanner: aegis
      cve_check: ${cve_id}
      expected_result: not_vulnerable
    timeout: 600

  - name: Update CMDB
    type: integration
    action: update_cmdb
    params:
      host_id: ${host_id}
      changes:
        patch_level: ${new_patch_level}
        last_patched: ${timestamp}
        patched_cves: [${cve_id}]

  - name: Notify stakeholders
    type: notification
    action: send_notification
    params:
      recipients: [system_owners, security_team, change_management]
      subject: "Patching complete: ${cve_id} on ${hostname}"
      message: |
        âœ… Critical Vulnerability Patched
        
        CVE: ${cve_id}
        Host: ${hostname}
        Patch Applied: ${patch_id}
        Verification: Passed
        
        System is now protected against this vulnerability.
      priority: high

postconditions:
  - verify: patch_installed
    params:
      host_id: ${host_id}
      patch_id: ${patch_id}

  - verify: vulnerability_resolved
    params:
      host_id: ${host_id}
      cve: ${cve_id}
      expected: not_vulnerable

  - verify: system_operational
    params:
      host_ip: ${host_ip}
      services: ${critical_services}

rollback:
  - name: Restore from snapshot
    type: backup
    action: restore_snapshot
    target: ${host_id}
    params:
      snapshot_id: ${snapshot_id}
      verify_before_restore: true

  - name: Notify rollback
    type: notification
    action: send_alert
    params:
      channels: [slack, email, pagerduty]
      priority: critical
      message: "Patch rollback initiated for ${hostname} due to issues"

metadata:
  severity: critical
  category: vulnerability_management
  rbac_role: vulnerability_analyst
  audit: true
  auto_approve: false
  retention_days: 365
  compliance: [pci_dss, hipaa, sox]
